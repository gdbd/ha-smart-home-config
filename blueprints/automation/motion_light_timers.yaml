blueprint:
  name: Light for motion with timers
  description: Advanced with timers
  domain: automation
  input:
    motion_trigger:
      name: Motion Sensor
      selector:
        entity:
          domain: binary_sensor
          device_class: motion

    light_switch:
      name: Light switch
      selector: 
        entity:
          filter:
            domain:
              - light
              - switch

    timer_motion:
      name: Timer for motion
      selector:
          entity:
            filter:
              domain: timer

    timer_motion_duration:
      name: Timer for motion duration
      default: 300
      selector:
        number:
          min: 10
          max: 1800
          step: 1
          unit_of_measurement: seconds
          mode: slider

    timer_manual_off:
      name: Timer manual off
      description: Timer delay motion detection after manual switch off
      selector:
        entity:
          filter:
            domain: timer

    timer_manual_off_duration:
      name: Timer for motion duration
      default: 60
      selector:
        number:
          min: 1
          max: 600
          step: 1
          unit_of_measurement: seconds
          mode: slider

    off_by_timeout:
      name: Light is off by timeout
      selector:
        entity:
          filter:
            domain:
              input_boolean
    after_time:
      name: Start Time
      description: Set the start time
      default: 00:00:00
      selector:
        time: {}

    before_time:
      name: End Time
      description: Set the end time
      default: 00:00:00
      selector:
        time: {}

    light_sensor:
      name: Light sensor
      default: []
      selector:
        entity:
          domain:
          - sensor
          device_class:
          - illuminance

    min_light_lux:
      name: Minimum lux to enable
      default: 20
      selector:
        number:
          min: 0
          max: 500
          step: 10
          unit_of_measurement: LUX
          mode: slider


mode: restart
max_exceeded: silent

variables:
  light_sensor: !input light_sensor
  min_light_lux: !input min_light_lux

trigger:
  - platform: state
    id: motion
    entity_id: !input motion_trigger
    from: 'off'
    to: 'on'

  - platform: event
    id: timer_motion_finished
    event_type: timer.finished
    event_data:
      entity_id: !input timer_motion 

  - platform: state
    id: light_on
    entity_id: !input light_switch
    from: "off"
    to: "on"

  - platform: state
    id: light_off
    entity_id: !input light_switch
    from: "on"
    to: "off"


condition:
  - condition: and
    conditions:
    - condition: time
      after: !input after_time
      before: !input before_time
    - '{{ (states[light_sensor].state | int > min_light_lux | int) }}'

action:
  - choose:
#---------------------------------------------------------------
      - conditions:
          - condition: trigger
            id: light_on
        sequence:
          - service: timer.start
            data:
              duration: !input timer_motion_duration
            target:
              entity_id: !input timer_motion
          - service: timer.cancel
            target:
              entity_id: !input timer_manual_off
          - service: input_boolean.turn_off
            target:
              entity_id: !input off_by_timeout
#---------------------------------------------------------------
      - conditions:
          - condition: trigger
            id: light_off
        sequence:
          - if:
              - condition: state
                entity_id: !input off_by_timeout
                state: "off"
            then:
              - service: timer.start
                data:
                  duration: !input timer_manual_off_duration
                target:
                  entity_id: !input timer_manual_off
          - service: timer.cancel
            target:
              entity_id: !input timer_motion
#---------------------------------------------------------------
      - conditions:
          - condition: trigger
            id: timer_motion_finished
          - condition: state
            entity_id: !input light_switch
            state: "on"
        sequence:
         - service: input_boolean.turn_on
           target:
             entity_id: !input off_by_timeout
         - service: switch.turn_off
           target:
             entity_id: !input light_switch 
#---------------------------------------------------------------
      - conditions:
          - condition: trigger
            id: motion
        sequence:
          - if:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: !input timer_manual_off
                    state: idle
            then:
              - service: switch.turn_on
                data: {}
                target:
                  entity_id: !input light_switch
              - service: timer.start
                data:
                  duration: !input timer_motion_duration
                target:
                  entity_id: !input timer_motion



#---------------------------------------------------------------
